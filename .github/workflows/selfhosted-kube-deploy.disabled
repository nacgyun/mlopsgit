name: SelfHosted Kube Deploy
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: [self-hosted, linux, x64, mlops, k8s]
    steps:
      - uses: actions/checkout@v4

      - name: Configure kubectl (persist KUBECONFIG)
        shell: bash
        run: |
          set -euo pipefail
          TOKEN_PATH="/var/run/secrets/kubernetes.io/serviceaccount/token"
          CA_PATH="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
          KCFG="${RUNNER_TEMP}/kubeconfig"

          # 환경변수에 박힌 잘못된 HOST/PORT 무시
          unset KUBERNETES_SERVICE_HOST KUBERNETES_SERVICE_PORT

          # kubeconfig 직접 생성 (DNS 고정)
          kubectl config set-cluster in-cluster \
            --server="https://kubernetes.default.svc:443" \
            --certificate-authority="${CA_PATH}" \
            --embed-certs=true \
            --kubeconfig="${KCFG}"
          kubectl config set-credentials sa \
            --token="$(cat ${TOKEN_PATH})" \
            --kubeconfig="${KCFG}"
          kubectl config set-context in-cluster \
            --cluster=in-cluster --user=sa \
            --kubeconfig="${KCFG}"
          kubectl config use-context in-cluster --kubeconfig="${KCFG}"

          # 잡 전체에 유지
          echo "KUBECONFIG=${KCFG}" >> "$GITHUB_ENV"

          echo "== kubeconfig server =="
          kubectl --kubeconfig="${KCFG}" config view --minify --raw | sed -n 's/ *server: *//p'

      - name: Sanity check
        shell: bash
        run: |
          set -euo pipefail
          # 서버 주소/버전 확인
          kubectl config view --minify --raw | sed -n 's/ *server: *//p'
          kubectl version --short --request-timeout=5s
          # 네임스페이스 목록
          kubectl get ns --request-timeout=5s

      - name: Deploy k8s manifests
        shell: bash
        run: |
          set -euo pipefail
          # 샘플 매니페스트 적용
          kubectl apply -f k8s/
          # 배포 상태 확인(선택)
          kubectl -n default rollout status deploy/nginx --timeout=60s
