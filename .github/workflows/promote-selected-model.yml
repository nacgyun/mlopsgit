name: Promote-Selected-Model
on:
  workflow_dispatch:
    inputs:
      model_name:
        description: "MLflow model name (e.g., light-logreg)"
        required: true
        default: "light-logreg"
      run_id:
        description: "RUN_ID to promote (copy from MLflow UI)"
        required: true
      reload_method:
        description: "How to refresh serve (rollout|http)"
        required: true
        default: "rollout"

jobs:
  promote:
    runs-on: self-hosted
    env:
      MLFLOW_TRACKING_URI: http://mlflow.mlops.svc.cluster.local:5000
      MODEL_NAME: ${{ inputs.model_name }}
      RUN_ID: ${{ inputs.run_id }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: pip install --no-cache-dir mlflow-skinny boto3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.30.0'

      - name: Build in-cluster kubeconfig (runner pod)
        run: |
          set -e
          CACERT=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
          API="https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"
          kubectl config set-cluster in-cluster --server="${API}" --certificate-authority="${CACERT}" --embed-certs=true
          kubectl config set-credentials sa --token="${SA_TOKEN}"
          kubectl config set-context in-cluster --cluster=in-cluster --user=sa --namespace=mlops
          kubectl config use-context in-cluster

      - name: Promote in MLflow
        run: python scripts/promote.py

      # === Serve 반영: 두 방식 중 택1 ===
      - name: Roll restart light-serve (K8s)
        if: ${{ inputs.reload_method == 'rollout' }}
        run: |
          DEPLOY=$(kubectl -n mlops get deploy -o name | grep 'light-serve' || true)
          if [ -z "$DEPLOY" ]; then
            echo "Cannot find Deployment containing 'light-serve' in name"; exit 1
          fi
          kubectl -n mlops rollout restart "$DEPLOY"
          kubectl -n mlops rollout status "$DEPLOY" --timeout=120s

      - name: Call /reload on light-serve (HTTP)
        if: ${{ inputs.reload_method == 'http' }}
        run: |
          curl -s -X POST http://light-serve.mlops.svc.cluster.local:8000/reload || true

