name: MLflow Train (Iris)
on:
  workflow_dispatch:

jobs:
  train:
    runs-on: [self-hosted, linux, x64, mlops, k8s]
    steps:
      - uses: actions/checkout@v4

      - name: Configure kubectl (persist KUBECONFIG)
        shell: bash
        run: |
          set -euo pipefail
          TOKEN_PATH="/var/run/secrets/kubernetes.io/serviceaccount/token"
          CA_PATH="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
          KCFG="${RUNNER_TEMP}/kubeconfig"
          unset KUBERNETES_SERVICE_HOST KUBERNETES_SERVICE_PORT
          kubectl config set-cluster in-cluster \
            --server="https://kubernetes.default.svc:443" \
            --certificate-authority="${CA_PATH}" --embed-certs=true \
            --kubeconfig="${KCFG}"
          kubectl config set-credentials sa \
            --token="$(cat ${TOKEN_PATH})" --kubeconfig="${KCFG}"
          kubectl config set-context in-cluster \
            --cluster=in-cluster --user=sa --kubeconfig="${KCFG}"
          kubectl config use-context in-cluster --kubeconfig="${KCFG}"
          echo "KUBECONFIG=${KCFG}" >> "$GITHUB_ENV"

      - name: Update ConfigMap from train.py (mlops)
        run: |
          kubectl -n mlops create configmap train-script \
            --from-file=train.py=ml/train.py \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply MLflow Job only (mlops)
        run: |
          kubectl -n mlops apply -f k8s/mlflow-train.yaml
          kubectl -n mlops get job mlflow-train-job -o wide

      - name: Wait & Logs
        run: |
          kubectl -n mlops wait --for=condition=complete job/mlflow-train-job --timeout=600s
          kubectl -n mlops logs job/mlflow-train-job
