apiVersion: batch/v1
kind: Job
metadata:
  name: __KANIKO_JOB_NAME__
  namespace: mlops
  labels:
    app: kaniko-build
    job-name: __KANIKO_JOB_NAME__
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app: kaniko-build
        job-name: __KANIKO_JOB_NAME__
    spec:
      restartPolicy: Never

      volumes:
        - name: docker-config
          secret:
            secretName: ghcr-creds
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: workspace
          emptyDir: {}

      initContainers:
        - name: fetch-src
          image: alpine:3.20
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-lc"]
          env:
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gh-pat
                  key: PAT
          args:
            - |
              set -e
              apk add --no-cache curl tar ca-certificates >/dev/null
              update-ca-certificates || true

              echo "download source for __GIT_SHA__"
              curl -sS -L -H "Authorization: Bearer ${GITHUB_TOKEN}" \
                -o /tmp/src.tgz "https://codeload.github.com/nacgyun/mlopsgit/tar.gz/__GIT_SHA__"

              mkdir -p /workspace
              tar -xzf /tmp/src.tgz -C /workspace --strip-components=1
              echo "workspace top (first 50):"
              ls -al /workspace | head -n 50
          volumeMounts:
            - name: workspace
              mountPath: /workspace

      containers:
        - name: kaniko
          image: gcr.io/kaniko-project/executor:latest
          imagePullPolicy: IfNotPresent
          args:
            - --context=/workspace
            - --dockerfile=__DOCKERFILE__             # /workspace/Dockerfile.runtime 로 치환됨
            - --destination=__IMAGE__                 # ghcr.io/nacgyun/mlopsgit:runtime 로 치환됨
            - --cache=true
            - --cache-repo=ghcr.io/nacgyun/mlopsgit/cache
          volumeMounts:
            - name: docker-config
              mountPath: /kaniko/.docker/   # => /kaniko/.docker/config.json
            - name: workspace
              mountPath: /workspace

