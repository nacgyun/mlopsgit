apiVersion: batch/v1
kind: Job
metadata:
  name: kaniko-build
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never

      # 1) 소스가 /workspace 에 준비될 때까지 대기
      initContainers:
        - name: fetch-src
          image: alpine:3.20
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -e
              mkdir -p /workspace
              echo "waiting for /workspace/.ready ..."
              while [ ! -f /workspace/.ready ]; do sleep 1; done
              echo "ready"
          volumeMounts:
            - name: workspace
              mountPath: /workspace

      # 2) Kaniko 실행 (GHCR push)
      containers:
        - name: kaniko
          image: gcr.io/kaniko-project/executor:latest
          imagePullPolicy: IfNotPresent
          args:
            - --context=/workspace
            - --dockerfile=/workspace/Dockerfile
            - --destination=ghcr.io/nacgyun/mlopsgit:__TAG__
          volumeMounts:
            # Kaniko가 읽는 위치에 Docker config(secret) 마운트
            - name: docker-config
              mountPath: /kaniko/.docker/
            # 소스 컨텍스트
            - name: workspace
              mountPath: /workspace

      volumes:
        # kubectl create secret generic ghcr-creds \
        #   --type=kubernetes.io/dockerconfigjson \
        #   --from-file=.dockerconfigjson=/tmp/dockerconfig.json
        - name: docker-config
          secret:
            secretName: ghcr-creds
            items:
              - key: .dockerconfigjson
                path: config.json  # => /kaniko/.docker/config.json
        - name: workspace
          emptyDir: {}

