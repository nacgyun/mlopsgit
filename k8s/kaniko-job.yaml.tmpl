apiVersion: batch/v1
kind: Job
metadata:
  name: __KANIKO_JOB_NAME__
  namespace: __NAMESPACE__
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never

      volumes:
        - name: workspace
          emptyDir: {}
        - name: docker-config
          secret:
            secretName: docker-config   # kubectl create secret docker-registry docker-config ...

      initContainers:
        - name: fetch-src
          image: alpine/git:2.45.2
          command: ["/bin/sh","-c"]
          args:
            - |
              set -eux
              git clone --no-checkout https://github.com/__GITHUB_OWNER__/__GITHUB_REPO__.git /workspace
              cd /workspace
              git fetch --depth=1 origin __GIT_SHA__
              git checkout __GIT_SHA__
              ls -al

          volumeMounts:
            - name: workspace
              mountPath: /workspace

        - name: check-src
          image: alpine:3.20
          command: ["/bin/sh","-c"]
          args:
            - |
              set -e
              if [ ! -f __DOCKERFILE__ ]; then
                echo "[ERROR] Missing __DOCKERFILE__"
                exit 1
              fi
              echo "[check] __DOCKERFILE__ found OK"
          volumeMounts:
            - name: workspace
              mountPath: /workspace

      containers:
        - name: kaniko
          image: gcr.io/kaniko-project/executor:v1.23.0
          args:
            - --label=io.nac.buildkey=__BUILD_KEY__
            - --context=/workspace
            - --dockerfile=__DOCKERFILE__
            - --destination=ghcr.io/__GITHUB_OWNER__/__GITHUB_REPO__:runtime
            - --destination=ghcr.io/__GITHUB_OWNER__/__GITHUB_REPO__:runtime-__GIT_SHA__
            - --cache=true
            - --cache-repo=ghcr.io/__GITHUB_OWNER__/__GITHUB_REPO__/cache
            - --verbosity=info
          env:
            - name: DOCKER_CONFIG
              value: /kaniko/.docker
          volumeMounts:
            - name: docker-config
              mountPath: /kaniko/.docker/config.json
              subPath: .dockerconfigjson     # ← 중요: 파일명으로 마운트
              readOnly: true
            - name: workspace
              mountPath: /workspace

