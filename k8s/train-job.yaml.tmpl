apiVersion: batch/v1
kind: Job
metadata:
  name: train-job
  namespace: mlops
  labels:
    app: train-job
    git-sha: "__GIT_SHA__"
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: train-job
        git-sha: "__GIT_SHA__"
    spec:
      restartPolicy: Never

      volumes:
        - name: workspace
          emptyDir: {}

      # 비공개 레포용: 토큰으로 인증하고, alpine에 git 설치해서 clone
      initContainers:
        - name: fetch-src
          image: alpine:3.20
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -e
              apk add --no-cache git curl ca-certificates
              update-ca-certificates || true

              echo "[init] expected SHA: __GIT_SHA__"

              # 비공개 레포: Authorization 헤더에 PAT 주입
              git -c http.extraHeader="Authorization: Bearer ${GITHUB_TOKEN}" \
                  clone https://github.com/nacgyun/mlopsgit /workspace

              cd /workspace
              git checkout __GIT_SHA__
              echo "[init] checked out to: $(git rev-parse HEAD)"
              head -n 1 /workspace/ml/train.py || true
          env:
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gh-pat     # <-- 네임스페이스 mlops에 있는 시크릿 이름
                  key: PAT         # <-- 키 이름(PAT) 확인
          volumeMounts:
            - name: workspace
              mountPath: /workspace

      containers:
        - name: trainer
          image: __IMAGE__          # = ghcr.io/<repo>:runtime (워크플로우에서 치환)
          command: ["/bin/sh","-lc"]
          args:
            - |
              echo "[trainer] using SHA: __GIT_SHA__"
              python -u /workspace/ml/train.py
          env:
            - name: MLFLOW_EXPERIMENT_NAME
              value: iris-rf
          volumeMounts:
            - name: workspace
              mountPath: /workspace

      # GHCR가 private이면 필요 (이미 있으면 유지)
      imagePullSecrets:
        - name: ghcr-creds

